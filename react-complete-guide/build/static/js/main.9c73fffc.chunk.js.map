{"version":3,"sources":["components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/ExpensesFilter/ExpensesFilter.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","className","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","datapoint","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selectedYear","onChange","event","onSlecetFilter","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","expensesArray","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","closeForm","onCloseCommand","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","NewExpense","showForm","setShowForm","enteredExpeneData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","addedExpene","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c73fffc.chunk.js","sourcesContent":["import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.label}\r\n          value={datapoint.value}\r\n          maxValue={totalMaximum}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //returns month by index start from 0. Means if month is Jan, it return 0.\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectHandler = (event) => {\r\n    props.onSlecetFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={selectHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <div className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found :)</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          date={expense.date}\r\n          amount={expense.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  // const expenses = [];\r\n  // props.expensesArray.forEach((element) => {\r\n  //   expenses.push(\r\n  //     <ExpenseItem\r\n  //       title={element.title}\r\n  //       date={element.date}\r\n  //       amount={element.amount}\r\n  //     />\r\n  //   );\r\n  // });\r\n\r\n  const selectFilterHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expensesArray.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <div className=\"expenses\">\r\n      <div>\r\n        <ExpensesFilter\r\n          selectedYear={filteredYear}\r\n          onSlecetFilter={selectFilterHandler}\r\n        />\r\n      </div>\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      {/* <div>{expenses}</div> */}\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  //using individual state is prefered\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //but we have single state as well\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    //we need to keep track of chaning of other states as well.\r\n    //it will work, but becuase React does not update the state instantly, it is better to use the next approach:\r\n    //if the state is huge, this approach does not guarantee that all values are set.\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredAmount: event.target.value };\r\n    // });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredDate: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    //for two way binding\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n    closeForm();\r\n  };\r\n\r\n  const closeForm = () => {\r\n    props.onCloseCommand();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          {/* value is for data binding */}\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={closeForm}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpeneData) => {\r\n    const expenseData = {\r\n      ...enteredExpeneData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const btnShowFormHandler = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  const closeCommandHandler = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!showForm && (\r\n        <button onClick={btnShowFormHandler}>Add New Expenses</button>\r\n      )}\r\n      {showForm && (\r\n        <ExpenseForm\r\n          onCloseCommand={closeCommandHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (addedExpene) => {\n    setExpenses((prevExpenses) => {\n      return [addedExpene, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expensesArray={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}